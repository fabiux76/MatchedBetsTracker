@model MatchedBetsTracker.ViewModels.MultipleMatchedBetFormViewModel

@{
    ViewBag.Title = "New";
}

@using (Html.BeginForm("AddMultipleMatchedBet", "MatchedBet"))
{
    <div class="form-group">
        @Html.LabelFor(m => m.MultipleBetDate)
        @Html.TextBoxFor(m => m.MultipleBetDate, "{0:yyyy-MM-ddTHH:mm}", new {@class = "form-control", type = "datetime-local"})
        @Html.ValidationMessageFor(m => m.MultipleBetDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.BetDescription)
        @Html.TextBoxFor(m => m.BetDescription, new {@class = "form-control"})
        @Html.ValidationMessageFor(m => m.BetDescription)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.MultipleBrokerAccountId)
        @Html.DropDownListFor(m => m.MultipleBrokerAccountId, new SelectList(Model.BrokerAccounts, "Id", "Name"), "Select Back Broker (Puntata)", new {@class = "form-control"})
        @Html.ValidationMessageFor(m => m.MultipleBrokerAccountId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.MultipleAmount)
        @Html.TextBoxFor(m => m.MultipleAmount, new {@class = "form-control"})
        @Html.ValidationMessageFor(m => m.MultipleAmount)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.MultipleQuoteTotal)
        @Html.TextBoxFor(m => m.MultipleQuoteTotal, new {@class = "form-control"})
        @Html.ValidationMessageFor(m => m.MultipleQuoteTotal)
    </div>

    <table>
        <thead>
        <tr>
            <th>Event</th>
            <th>Date</th>
            <th>Quote Multiple</th>
            <th>Single Quote</th>
            <th>Single Amount</th>
            <th>Single Broker</th>
        </tr>
        </thead>
        <tbody>
        @for (int i = 0; i < Model.Singles.Count; i++)
        {
            <tr>
                <td class="form-group">
                    @Html.TextBoxFor(m => m.Singles[i].EventDescription, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.Singles[i].EventDescription)
                </td>

                <td class="form-group">
                    @Html.TextBoxFor(m => m.Singles[i].EventDate, "{0:yyyy-MM-ddTHH:mm}", new {@class = "form-control", type = "datetime-local"})
                    @Html.ValidationMessageFor(m => m.Singles[i].EventDate)
                </td>
                
                <td class="form-group">
                    @Html.TextBoxFor(m => m.Singles[i].QuoteInMultiple, new {@class = "form-control"})
                    @Html.ValidationMessageFor(m => m.Singles[i].QuoteInMultiple)
                </td>

                @if (Model.Singles[i].SingleBrokerAccountId != 0)
                {
                    <td>VAL</td>
                    <td>VAL</td>
                    <td>VAL</td>
                }
                else
                {
                    <td>N/A</td>
                    <td>N/A</td>
                    <td>N/A</td>
                }
                
            </tr>

            /*                    
            <div class="form-group">
                @Html.LabelFor(m => m.Singles[i].SingleBrokerAccountId)
                @Html.DropDownListFor(m => m.Singles[i].SingleBrokerAccountId, new SelectList(Model.BrokerAccounts, "Id", "Name"), "Select Lay Broker (Bancata)", new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.Singles[i].SingleBrokerAccountId)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Singles[i].SingleAmount)
                @Html.TextBoxFor(m => m.Singles[i].SingleAmount, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.Singles[i].SingleAmount)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Singles[i].QuoteInSingle)
                @Html.TextBoxFor(m => m.Singles[i].QuoteInSingle, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.Singles[i].QuoteInSingle)
            </div>

            <div class="form-group form-check">
                @Html.CheckBoxFor(m => m.Singles[i].IsSingleLay, new {@class = "form-check-input"})
                @Html.LabelFor(m => m.Singles[i].IsSingleLay, new {@class = "form-check-label"})
                @Html.ValidationMessageFor(m => m.Singles[i].IsSingleLay)
            </div>
            */
        }
        </tbody>
    </table>

    <div class="form-group form-check">
        @Html.CheckBoxFor(m => m.ValidateTransactions, new {@class = "form-check-input"})
        @Html.LabelFor(m => m.ValidateTransactions, new {@class = "form-check-label"})
        @Html.ValidationMessageFor(m => m.ValidateTransactions)
    </div>

    @Html.HiddenFor(m => m.Id)

    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval") 
    <script>
        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
    </script>
}
